[{"/Users/blasius/react-study/hooks/src/index.js":"1","/Users/blasius/react-study/hooks/src/App.jsx":"2","/Users/blasius/react-study/hooks/src/navBar/Content.jsx":"3","/Users/blasius/react-study/hooks/src/navBar/NavBar.jsx":"4","/Users/blasius/react-study/hooks/src/data/DataContext.jsx":"5","/Users/blasius/react-study/hooks/src/data/Store.jsx":"6","/Users/blasius/react-study/hooks/src/views/useContext/UseTestContext.jsx":"7","/Users/blasius/react-study/hooks/src/views/useEffect/UseEffect.jsx":"8","/Users/blasius/react-study/hooks/src/views/Home/Home.jsx":"9","/Users/blasius/react-study/hooks/src/views/useRef/UseRef.jsx":"10","/Users/blasius/react-study/hooks/src/views/useCallback/UseCallback.jsx":"11","/Users/blasius/react-study/hooks/src/views/useContext/UseContext.jsx":"12","/Users/blasius/react-study/hooks/src/views/useReducer/UseReducer.jsx":"13","/Users/blasius/react-study/hooks/src/views/useRef/UseRef2.jsx":"14","/Users/blasius/react-study/hooks/src/views/useMemo/UseMemo.jsx":"15","/Users/blasius/react-study/hooks/src/views/useMyHook/UseMyHook.jsx":"16","/Users/blasius/react-study/hooks/src/views/useState/UseState.jsx":"17","/Users/blasius/react-study/hooks/src/data/DataContext2.jsx":"18","/Users/blasius/react-study/hooks/src/views/useCallback/UseCallBackButtons.jsx":"19","/Users/blasius/react-study/hooks/src/views/title/Title.jsx":"20","/Users/blasius/react-study/hooks/src/views/hangman/hangman.js":"21"},{"size":292,"mtime":1652625585347,"results":"22","hashOfConfig":"23"},{"size":652,"mtime":1652625585346,"results":"24","hashOfConfig":"23"},{"size":2189,"mtime":1654309228079,"results":"25","hashOfConfig":"23"},{"size":1449,"mtime":1654309247152,"results":"26","hashOfConfig":"23"},{"size":534,"mtime":1652625585347,"results":"27","hashOfConfig":"23"},{"size":814,"mtime":1652625585347,"results":"28","hashOfConfig":"23"},{"size":805,"mtime":1652625585349,"results":"29","hashOfConfig":"23"},{"size":3002,"mtime":1652625585350,"results":"30","hashOfConfig":"23"},{"size":332,"mtime":1652625585348,"results":"31","hashOfConfig":"23"},{"size":3215,"mtime":1652625585351,"results":"32","hashOfConfig":"23"},{"size":766,"mtime":1652625585349,"results":"33","hashOfConfig":"23"},{"size":1748,"mtime":1652625585349,"results":"34","hashOfConfig":"23"},{"size":3289,"mtime":1652625585350,"results":"35","hashOfConfig":"23"},{"size":2043,"mtime":1652625585351,"results":"36","hashOfConfig":"23"},{"size":1179,"mtime":1652625585350,"results":"37","hashOfConfig":"23"},{"size":328,"mtime":1652625585350,"results":"38","hashOfConfig":"23"},{"size":1480,"mtime":1652625585351,"results":"39","hashOfConfig":"23"},{"size":170,"mtime":1652625585347,"results":"40","hashOfConfig":"23"},{"size":417,"mtime":1652625585349,"results":"41","hashOfConfig":"23"},{"size":222,"mtime":1652625585348,"results":"42","hashOfConfig":"23"},{"size":4391,"mtime":1655164218273,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1xwxybp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/blasius/react-study/hooks/src/index.js",[],["102","103"],"/Users/blasius/react-study/hooks/src/App.jsx",["104","105","106"],"import React , {useState} from 'react'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Menu from './navBar/NavBar'\nimport Content from './navBar/Content'\nimport DataContext , {data} from './data/DataContext'\nimport Store from './data/Store'\n\n\nfunction App() {\n  const [state , setState] = useState(data)\n\n  return (\n    <div className=\"App\">  \n    <Store> \n      <DataContext.Provider value={{state , setState}}>  \n          <Router>\n              <Menu/>\n              <Content/>\n          </Router>\n      </DataContext.Provider>\n    </Store>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/blasius/react-study/hooks/src/navBar/Content.jsx",["107","108"],"import './Content.css'\nimport React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n  import Store from '../data/Store'\n  import Home from '../views/Home/Home'\n  import UseCallback from '../views/useCallback/UseCallback'\n  import UseContext from '../views/useContext/UseContext'\n  import UseTestContext from '../views/useContext/UseTestContext'\n  import UseEffect from '../views/useEffect/UseEffect'\n  import UseMemo from '../views/useMemo/UseMemo'\n  import UseReducer from '../views/useReducer/UseReducer'\n  import UseRef from '../views/useRef/UseRef'\n  import UseRef2 from '../views/useRef/UseRef2'\n  import UseState from '../views/useState/UseState'\n  import UseMyHook from '../views/useMyHook/UseMyHook'\n  import Hangman from '../views/hangman/hangman';\n \n  const Content = props => (\n      <main className=\"Content\"> \n          <Switch>\n              <Route exact path=\"/\"> \n                <Home/>\n              </Route>\n\n              <Route path='/Store'>\n                  <Store/>\n              </Route>\n\n              <Route path=\"/UseState\">\n                  <UseState/>\n              </Route>\n\n              <Route  path=\"/UseEffect\" >\n                  <UseEffect/>\n              </Route>\n\n              <Route path=\"/UseRef\">\n                  <UseRef/>\n              </Route>\n\n              <Route path=\"/UseRef2\">\n                  <UseRef2/>\n              </Route>\n\n              <Route path=\"/UseMemo\">\n                  <UseMemo/>\n              </Route>\n\n              <Route path=\"/UseCallback\">\n                  <UseCallback/>\n              </Route>\n\n              <Route path=\"/UseContext\">\n                  <UseContext/>\n              </Route>\n\n              <Route path=\"/UseTestContext\">\n                <UseTestContext/>\n              </Route>   \n\n              <Route path=\"/UseReducer\">\n                  <UseReducer/>\n              </Route> \n\n              <Route path=\"/UseMyHook\">\n                  <UseMyHook/>\n              </Route>\n\n              <Route path=\"/Hangman\">\n                  <Hangman/>\n              </Route>\n          </Switch>\n      </main>\n  )\n\n  export default Content","/Users/blasius/react-study/hooks/src/navBar/NavBar.jsx",["109","110","111"],"import React from 'react'\nimport './NavBar.css'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst NavBar = props => (\n    <aside className=\"Menu\" >\n        <nav>\n            <ul>\n                <li>\n                    <Link exact to=\"/\"> Home </Link>\n                </li> \n                <li> \n                    <Link to='/store'> Store </Link>\n                </li>\n                <li>\n                   <Link to=\"/useState\"> UseState() </Link> \n                </li>\n                <li>\n                    <Link to=\"/useEffect\"> UseEffect()  </Link>\n                </li>\n                <li>\n                    <Link to=\"/useRef\"> useRef() </Link>\n                </li>  \n                <li>\n                    <Link to=\"/useMemo\"> useMemo() </Link>\n                </li>\n                <li> \n                    <Link to=\"/useCallback\"> useCallback() </Link>\n                </li>\n                <li>\n                    <Link to=\"/useContext\"> useContext() </Link>\n                </li>\n                <li>\n                    <Link to=\"/useReducer\"> useReducer() </Link>\n                </li>\n                <li>\n                    <Link to=\"/useMyHook\"> useMyHook() </Link>\n                </li>\n                <li>\n                    <Link to=\"/Hangman\"> Hangman() </Link>\n                </li>\n            </ul>\n        </nav>\n    </aside>\n)\n\nexport default NavBar","/Users/blasius/react-study/hooks/src/data/DataContext.jsx",["112"],"import React , {useContext} from 'react'\n\nexport const data ={\n    number: 123,\n    text: 'Context API...'\n}\n\nconst DataContext = React.createContext(data)\n\nexport default DataContext\n// O contexto, é para quando se faz necessário a comunicação de dois componentes muito distantes.\n// ou seja, para não envolver muitos outros componentes indiretamentes, é feito um COntext central para a comunicação direta\n\n// é interessante que esse componente seja chamado na parte mais alta da minha aplicação, como o app.js ou index.js","/Users/blasius/react-study/hooks/src/data/Store.jsx",[],"/Users/blasius/react-study/hooks/src/views/useContext/UseTestContext.jsx",[],"/Users/blasius/react-study/hooks/src/views/useEffect/UseEffect.jsx",["113","114","115","116"],"import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport Title from '../title/Title'\nimport './useEffect.css'\n\n\nconst UseEffect = props => {\n    // EX #01\n    const [valor, setValor] = useState(0) // observe que valor, é o Input\n    const [fatorial, setFatorial] = useState(1) //  e que fatorial é o calculo fatorial retornado\n\n    // EX #02\n    const [number, setNumber] = useState(0)\n    const [verify, setVerify] = useState(Boolean)\n\n\n     //EX #01\n    useEffect(_=> { // 1 parâmetro: Vai chamar a função sempre que algo mudar ** com arrow function\n        setFatorial(calcFatorial(valor))\n    },[valor]) // 2 parâmetro, pergunte-se: Do que eu dependo para calcular o fatorial?\n\n    useEffect(function(){\n        if(fatorial > 10000000){\n            document.title = 'eita !!'\n        }\n    },[fatorial/*, OutraVar */]) // Pode ser mais de uma passagem por valor\n\n    //EX #02\n    useEffect(function(){\n        setVerify(isPar(number))\n    },[number])\n\n    function isPar(n){\n        if(n % 2 == 0){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    function calcFatorial(n){\n        const num = parseInt(n)\n        if(n < 0) return -1\n        if(num === 0) return 1\n        return calcFatorial(n-1) * n\n    }\n\n    return(\n        <div className=\"Cabecalho\">\n            <header>\n                <h1> UseEffect</h1>\n                <h5> Permite executar efeitos colaterais em componentes funcionais! </h5>\n            </header>\n\n            <Title titulo=\"Exercicio 01\" subtitulo=\"Calculo fatorial\" />\n            <div className=\"Corpo\">\n                <div>\n                    <span> Fatorial </span>\n                    <span className=\"red\"> {fatorial === -1 ?'Não existe': fatorial} </span>\n                </div>\n                <input type=\"number\" onChange={e=>{setValor(e.target.value)}} />\n            </div>\n\n            <Title titulo=\"Exercicio 02\" subtitulo=\"?\" />\n            <div className=\"Corpo\">\n                <div>\n\n                    <span className=\"red\" > {verify == true ? 'Par' : 'Impar'} </span>\n                </div>\n                <input type=\"number\" onChange={e => setNumber(e.target.value)} />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default UseEffect\n\n/*\n const [valor, setValor] = useState(0)\n    const [fatorial, setFatorial] = useState(1)\n    setFatorial(calcFatorial(valor)) // Se eu quissese alterar o estado, para o número fatoria do que eu passar na const fatorial, isso deveria funcionar correto?\n    // Logicamente, sim, mas no React isso NÃO é possível, para alterar a const valor eu vou precisar chamar o Hooks useEffect\n\n    function calcFatorial(n){\n        if(n < 0) return -1\n        if(n === 0) return 1\n        return calcFatorial(n-1) * n\n    }\n\n    Esse erro aconteceu, porque eu fiquei alterando o fatorial e o number pra sempre, ou seja, entrou em loop infinito\n    Veja o código acima para saber como resolver esse problema\n*/","/Users/blasius/react-study/hooks/src/views/Home/Home.jsx",["117","118","119","120"],"import React, {useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport '../estilo/Geral.css'\n\nimport Title from '../title/Title'\n\n\nconst UseMyHook = props => {\n    const[valor, setValor] = useState('State padrão')\n\n    return(\n       <div>\n           Home\n       </div>\n\n        \n    )\n}\n\nexport default UseMyHook ","/Users/blasius/react-study/hooks/src/views/useRef/UseRef.jsx",["121","122"],"import React, { useEffect, useRef, useState } from 'react';\nimport Title from '../title/Title';\n\n\n\nconst UseRef = props => {\n    const [value01, setValue01] = useState(\"\");\n    const [value02, setValue02] = useState(\"\");\n\n    const [value03, setValue03] = useState(\"\");\n    const [value04, setValue04] = useState(\"\");\n\n    const myInput03 = useRef(null)\n    const myInput04 = useRef(null)\n\n    const count01 = useRef(0) // me Retorna um objeto com o atríbuto .current, ao chamar o count, devo chamar o current também(count.current), pois no caso é o que me interessa\n    const count02 = useRef(0)\n\n    var i=0\n\n    const merge = function (s1,s2) {// a constante armazenou uma função com dois parâmentros\n        return [...s1].map((e,i) => `${e}${s2[i] || \"\"}`).join(\"\")  // [...s1] vai transformar o paramtro s1 em um array de letras, depois vai mapear '.map()', e dentro desse map, e = cada letra, i = indice\n    }// vai retornar a letra mais a letra no indice correspondente a string de s2. Imagine um for onde cada i equivale a prosição do array.\n        // se eu colocar sem o .join(\"\"), o código acima me retorna um array, esse .join('') serve para transformar tudo em string de novo\n    \n\n    /// count.current ++ // Desse modo, vai alterar sempre que for alterado qualquer input, em todas as rendereizações.. \n    // Lembre-se que a nova reenderização só ocorre com a mudança de algum estado. Se vc colasse um input avulso, não iria funcionar\n    useEffect(e=>{\n        count01.current++ // Assim muda o count só quando um input específico for mudado. Para ser geral, deve ser fora da função\n    },[value01 /*, value02 */])  \n\n    useEffect(e=>{\n        count02.current++\n        myInput03.current.focus()\n        \n    },[value04]);\n\n    useEffect(e=>{\n        count02.current++\n        myInput04.current.focus()\n        merge(value03,value04)\n    }, [value03])\n\n    return(\n        <div className=\"Cabecalho\">\n            <header>\n                <h1> UseRef</h1>\n                <h5> Retorna um objeto mutável com a propriedade .current! </h5>\n            </header>\n\n            <Title titulo=\"Exercicio 01\" />\n            <div className=\"Corpo\">\n                <p> Input 01  <input type=\"text\" value={value01} onChange={e => setValue01(e.target.value)}/> </p>\n                <p> Input 02   <input type=\"text\" value={value02} onChange={e => setValue02(e.target.value)} /> </p>\n                <span>Valor: [</span> \n                <span> {count01.current} ] </span>\n            </div>\n\n            <Title titulo=\"Exercicio 02\" />\n            <div className=\"Corpo\">\n\n                    <p><input type=\"text\" value={value03} \n                    ref={myInput03}\n                    onChange={e => setValue03(e.target.value)}/></p>\n\n                    <p><input type=\"text\" value={value04} \n                    ref={myInput04}\n                    onChange={e => setValue04(e.target.value)}/></p>\n\n                <span>Valor: [</span>\n                <span> {count02.current} ] </span>\n                    <p>{value03}</p>\n                    <p>{value04}</p>\n                    <h2> {merge(value03, value04)} </h2>\n            </div>\n        </div>\n    )\n}\n\nexport default UseRef","/Users/blasius/react-study/hooks/src/views/useCallback/UseCallback.jsx",["123"],"import React , { useState, useCallback } from 'react'\nimport {useParams} from 'react-router-dom'\nimport UseCallBackButtons from './UseCallBackButtons'\n\n\nconst UseCallback = props => {\n\n    const [result , setResult] = useState(0)\n\n    const inc = useCallback(function (delta){\n        setResult(curr => curr + delta)\n    }, [setResult]) \n\n    return(\n        <> \n            <div className=\"Cabecalho\">\n                <header>\n                    <h1> useCallback() </h1>\n                    <h2> Retorna uma função cacheada! </h2>\n                </header>\n            </div>\n            \n            <div>\n                <UseCallBackButtons inc={inc} />\n                <span> {result} </span>\n            </div>\n        </>\n    )\n}\n\nexport default UseCallback","/Users/blasius/react-study/hooks/src/views/useContext/UseContext.jsx",["124"],"import React , {useContext, useEffect} from 'react'\nimport DataContext from '../../data/DataContext'\nimport {AppContext} from '../../data/Store'\n\nconst UseContext = props => {\n\n    const context = useContext(DataContext)\n\n    function addNumber(delta){\n        context.setState({\n            ...context.state, \n            number: context.state.number + delta\n        })\n    }\n\n    const {number, setNumber,text, setText} = useContext(AppContext)\n\n    useEffect(()=>{\n        if(number > 9290){\n            setText('EITA!!!')\n        }\n    },[number])\n\n    return(\n    <> \n        <div className=\"Cabecalho\">\n            <header>\n                <h1> useContext</h1>\n                <h5> Explicando o componente </h5>\n            </header>\n        </div>\n\n        <div>\n            <h2> Exercicio #01 </h2>\n            <span>  {context.state.text}   </span>\n            <span>  {context.state.number} </span>\n        </div>\n\n        <div>\n            <button className=\"btn\" onClick={()=> addNumber(-1)}> -1 </button>\n            <button className=\"btn\" onClick={()=> addNumber(1)}> +1 </button>\n        </div>\n\n        <div style={{margin:'50px' , width:600}}>\n             Observe que mesmo saindo da aba useContext e voltando, o estado continua o mesmo que foi alterado. Isso acontece pois há um \"componente global\" com esse estado, que dispensa a troca de informação direta entre componentes\n        </div>\n\n\n        <h2> Exercicio #02 </h2>\n        <span> {number} </span>\n        <span> {text} </span>\n\n        <div>\n            <input type=\"button\" value='-1' onClick={()=> setNumber(number -1)}/>\n            <input type=\"button\" value='+1' onClick={()=> setNumber(number +1)}/>\n        </div>\n    </>\n    )\n}\n\n\nexport default UseContext","/Users/blasius/react-study/hooks/src/views/useReducer/UseReducer.jsx",["125"],"import React, { useReducer } from 'react'\nimport '../estilo/Geral.css'\n\nconst initialState = {\n    cart: [],\n    products: [],\n    //foco\n    number: 0,\n    user: { name: 'nothing' }\n}\n\nconst secondInitialState = {\n    cart:[],\n    products:[],\n    user:null,\n    number:0\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'numberAdd2':\n            return { ...state, number: state.number + 2 }\n        case 'login':\n            return { ...state, user: { name: action.payload } }\n        default:\n            return state\n    }\n}\n\nfunction reducerTest(state,action){\n    switch (action.type){\n        case 'addNumber2':\n            return {...state, number: state.number +2}\n        case 'multiplyFor7':\n            return {...state, number: state.number * 7}\n        case 'shareBy25':\n            return {...state, number: state.number / 25}\n        case 'addNumber9':\n            return {...state, number: state.number + action.payload}\n        case 'parseToInteger':\n            return {...state, number: parseInt(state.number)}\n            \n    }\n}\n\n\nconst UseReducer = props => {\n    const [firstState, dispatch] = useReducer(reducer, initialState)\n    const [secondState, dispatchTest] = useReducer(reducerTest, secondInitialState)\n\n    return (\n        <div className=\"Cabecalho\">\n            <header>\n                <h1> useReducer</h1>\n                <h5> Explicando o componente </h5>\n            </header>\n\n            <div className=\"Corpo\">\n                <h1> #Exercicio 01 </h1>\n                <h3> {firstState.user.name} </h3>\n                <div className=\"groupButton\">\n                    <input className=\"btn\" type='button' value={firstState.number} onClick={() => dispatch({ type: 'numberAdd2' })} />\n                    <input className=\"text\" type=\"text\"  value={firstState.user.name} onChange={(e) => dispatch({ type: 'login', payload: e.target.value })} />\n                </div>\n            </div>\n\n            <div className=\"Corpo\">\n                <h1> #Exercicio 02 - Challenge </h1>\n\n                <div className=\"Instructions\">\n                    <h4>Intructions</h4>\n                    <span> 1 - Create a number and multiply for seven. </span>\n                    <span> 2 - Share the result by twenty-five </span>\n                    <span> 3 - Create a function to tranform for a integer. </span>\n                    <span> 4 - Add some number of your choice. </span>\n                </div>\n\n                <div className=\"groupButton\">\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'addNumber2'})}> +2 </button>\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'multiplyFor7'})}> *7 </button>\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'shareBy25'})}> /25 </button>\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'addNumber9', payload:9})}>  +9 </button>\n                    <button className=\"btn\" type=\"button\" value={\"Interger\"} onClick={()=>  dispatchTest({type:'parseToInteger'})}> Inteiro </button>\n                </div>\n            </div>\n\n            {secondState.number}\n        </div>\n    )\n}\n\nexport default UseReducer","/Users/blasius/react-study/hooks/src/views/useRef/UseRef2.jsx",["126","127","128"],"import React, {useState, useEffect, useRef} from 'react'\nimport Title from '../title/Title'\n\nconst merge = (s1, s2)=> {\n    let teste\n    s1.map((item,index)=>{\n        teste = `${item[index]} ${s2[index]}` // verificar depois\n    })\n    return teste\n}   \n\nconst UseRef2 = props => {\n    const [value1, setValue1] = useState(\"\")\n    const [value2, setValue2] = useState(\"\")\n    const [total, setTotal] = useState(\"\")\n    const count = useRef(-1) // UseRef = Passagem por referência. Count é na verdade, um objeto com o parametro current dentro dele\n    // esse Objeto terá sempre a mesma referência\n    const myInput1 = useRef(null)\n    const myInput2 = useRef(null)\n\n    useEffect(()=>{\n        count.current++\n        myInput2.current.focus()\n    },[value1])\n\n    useEffect(()=>{\n        count.current++\n        myInput1.current.focus()\n    },[value2])\n    \n    count.current = count.current+1\n    return (\n        <div className=\"Cabecalho\">\n            <header>\n                <h1> UseRef</h1>\n                <h5> Retorna um objeto mutável com a propriedade .current! </h5>\n            </header> \n\n            <div>\n                <span> Valor: </span> \n                <span> {merge(value1,value2)}</span>\n                <span> [{count.current}] </span> \n                \n            </div>\n            \n            <div className=\"Corpo\">\n            <Title titulo=\"Exercicio01\"/>\n               <input type=\"text\" className=\"input\" value={value1} \n               ref={myInput1}\n               onChange={(e)=> { \n                   setValue1(e.target.value)\n                   merge(value1,value2)\n                }}/> \n            </div>\n\n\n            <div className=\"Corpo\">\n            <Title titulo=\"Exercicio02\"/>\n               <input type=\"input\" className=\"input\" value={value2} \n                ref={myInput2}\n               onChange={(e)=> { \n                    setValue2(e.target.value)\n                    merge(value1,value2)\n                }}/> \n            </div>\n\n        </div>\n    )\n}\n\nexport default UseRef2","/Users/blasius/react-study/hooks/src/views/useMemo/UseMemo.jsx",["129"],"import React, { useState, useMemo } from 'react'\nimport PageTitle from '../title/Title'\n\nfunction sum(a,b){\n    return a + b;\n}\n\nconst UseMemo = props => {\n\n    const [n1, setN1] = useState(0)\n    const [n2, setN2] = useState(0)\n    const [n3, setN3] = useState(0)\n\n    const result = useMemo(()=> sum(n1,n2), [n1,n2]) // como se fosse um useEffect  --> useMemo(()=> FUNÇÃO, [valores])\n\n    return (\n        <div className=\"Cabecalho\">\n            <header>\n                <h1> UseMemo</h1>\n                <h5> Retorna um valor memorizado </h5>\n            </header>\n\n            <div style={{ display: 'flex', gap:20,alignItems:'center', flexDirection:'column', marginTop:20}}>\n                <input type=\"number\" className=\"input\" value={n1} onChange={e => setN1(parseInt(e.target.value))} />\n\n                <input type=\"number\" className=\"input\" value={n2} onChange={e => setN2(parseInt(e.target.value))} />\n\n                <input type=\"number\" className=\"input\" value={n3} onChange={e => setN3(parseInt(e.target.value))} />\n\n                <span style={{fontSize:30}}> {result } </span>\n            </div>\n\n            \n\n        </div>\n    )\n}\n\nexport default UseMemo","/Users/blasius/react-study/hooks/src/views/useMyHook/UseMyHook.jsx",["130"],"import React from 'react'\nimport {useParams} from 'react-router-dom'\n\n\nconst UseMyHook = props => {\n\n    return(\n        <div className=\"Cabecalho\">\n            <header>\n                <h1> UseMyHook</h1>\n                <h5> Explicando o componente </h5>\n            </header>\n        </div>\n    )\n}\n\nexport default UseMyHook ","/Users/blasius/react-study/hooks/src/views/useState/UseState.jsx",["131"],"import React, {useState} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport Title from '../title/Title'\n\n\nconst UseState = props => {\n\n    const[valor, setValor] = useState('Gustavo')\n    const[contador, setContador] = useState(0)\n\n    return(\n        <div className=\"Cabecalho\" >\n        <header>\n            <h1> Home</h1>\n            <h5> Pàgina Principal </h5>\n        </header>\n\n        <Title titulo=\"Exercicio 01\" subtitulo=\"Input\"></Title>\n            <div className=\"Corpo\">\n                <label for=\"texto\"> Texto </label>\n                <input id=\"texto\" type=\"text\" onChange={e => setValor(e.target.value)} />\n                <p> {valor} </p>\n                <p> {valor} </p>\n                <p> {valor} </p>\n            </div>\n\n        <Title titulo=\"Exercicio 02\" subtitulo=\"Contador\"></Title>\n            <div className=\"Corpo\">\n                <button onClick={_ => setContador(contador + 1)} > +1 </button>\n                <button onClick={_ => setContador(contador - 1)}>  -1 </button>\n                <button onClick={_ => setContador(1000)}>1000</button>\n                <p> {contador} </p>\n                <p>Observe que toda mudança feita, é alterado o ESTADO  da const  </p>\n                <p>E para isso, é preciso alterar o elemento SET, que no meu caso é SetValor, o Estado da const não é alterado diretamente, mas sim por um array complementar </p>\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default UseState","/Users/blasius/react-study/hooks/src/data/DataContext2.jsx",[],"/Users/blasius/react-study/hooks/src/views/useCallback/UseCallBackButtons.jsx",[],"/Users/blasius/react-study/hooks/src/views/title/Title.jsx",["132"],"import React from 'react'\nimport './title.css'\n\nexport default props => {\n\n    return(\n        <div className=\"titulo\">\n            <h2> {props.titulo} </h2>\n            <h5> {props.subtitulo} </h5>\n        </div>\n    );\n}","/Users/blasius/react-study/hooks/src/views/hangman/hangman.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":5,"column":3,"nodeType":"155","messageId":"156","endLine":5,"endColumn":9},{"ruleId":"153","severity":1,"message":"157","line":6,"column":3,"nodeType":"155","messageId":"156","endLine":6,"endColumn":8},{"ruleId":"153","severity":1,"message":"158","line":7,"column":3,"nodeType":"155","messageId":"156","endLine":7,"endColumn":7},{"ruleId":"153","severity":1,"message":"159","line":4,"column":22,"nodeType":"155","messageId":"156","endLine":4,"endColumn":28},{"ruleId":"153","severity":1,"message":"158","line":7,"column":5,"nodeType":"155","messageId":"156","endLine":7,"endColumn":9},{"ruleId":"153","severity":1,"message":"159","line":4,"column":22,"nodeType":"155","messageId":"156","endLine":4,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":5,"column":5,"nodeType":"155","messageId":"156","endLine":5,"endColumn":11},{"ruleId":"153","severity":1,"message":"157","line":6,"column":5,"nodeType":"155","messageId":"156","endLine":6,"endColumn":10},{"ruleId":"153","severity":1,"message":"160","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":27},{"ruleId":"153","severity":1,"message":"161","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":20,"column":7,"nodeType":"164","endLine":20,"endColumn":14,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":34,"column":18,"nodeType":"168","messageId":"169","endLine":34,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":68,"column":53,"nodeType":"168","messageId":"169","endLine":68,"endColumn":55},{"ruleId":"153","severity":1,"message":"161","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"153","severity":1,"message":"170","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"153","severity":1,"message":"171","line":9,"column":11,"nodeType":"155","messageId":"156","endLine":9,"endColumn":16},{"ruleId":"153","severity":1,"message":"172","line":9,"column":18,"nodeType":"155","messageId":"156","endLine":9,"endColumn":26},{"ruleId":"153","severity":1,"message":"173","line":19,"column":9,"nodeType":"155","messageId":"156","endLine":19,"endColumn":10},{"ruleId":"162","severity":1,"message":"174","line":43,"column":8,"nodeType":"164","endLine":43,"endColumn":17,"suggestions":"175"},{"ruleId":"153","severity":1,"message":"161","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"162","severity":1,"message":"176","line":22,"column":7,"nodeType":"164","endLine":22,"endColumn":15,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":31,"column":5,"nodeType":"180","messageId":"181","endLine":43,"endColumn":6},{"ruleId":"182","severity":1,"message":"183","line":6,"column":24,"nodeType":"184","messageId":"185","endLine":6,"endColumn":26},{"ruleId":"153","severity":1,"message":"186","line":15,"column":12,"nodeType":"155","messageId":"156","endLine":15,"endColumn":17},{"ruleId":"153","severity":1,"message":"187","line":15,"column":19,"nodeType":"155","messageId":"156","endLine":15,"endColumn":27},{"ruleId":"153","severity":1,"message":"188","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"161","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"153","severity":1,"message":"161","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":4,"column":1,"nodeType":"191","endLine":12,"endColumn":2},{"ruleId":"153","severity":1,"message":"192","line":1,"column":38,"nodeType":"155","messageId":"156","endLine":1,"endColumn":49},{"ruleId":"153","severity":1,"message":"161","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":19},{"ruleId":"153","severity":1,"message":"193","line":7,"column":12,"nodeType":"155","messageId":"156","endLine":7,"endColumn":16},{"ruleId":"153","severity":1,"message":"194","line":7,"column":18,"nodeType":"155","messageId":"156","endLine":7,"endColumn":25},{"ruleId":"153","severity":1,"message":"195","line":8,"column":12,"nodeType":"155","messageId":"156","endLine":8,"endColumn":16},{"ruleId":"153","severity":1,"message":"196","line":8,"column":18,"nodeType":"155","messageId":"156","endLine":8,"endColumn":25},{"ruleId":"153","severity":1,"message":"197","line":9,"column":12,"nodeType":"155","messageId":"156","endLine":9,"endColumn":24},{"ruleId":"153","severity":1,"message":"198","line":9,"column":26,"nodeType":"155","messageId":"156","endLine":9,"endColumn":41},{"ruleId":"153","severity":1,"message":"199","line":12,"column":25,"nodeType":"155","messageId":"156","endLine":12,"endColumn":39},{"ruleId":"153","severity":1,"message":"200","line":17,"column":12,"nodeType":"155","messageId":"156","endLine":17,"endColumn":19},{"ruleId":"153","severity":1,"message":"201","line":17,"column":21,"nodeType":"155","messageId":"156","endLine":17,"endColumn":31},{"ruleId":"162","severity":1,"message":"202","line":21,"column":8,"nodeType":"164","endLine":21,"endColumn":10,"suggestions":"203"},{"ruleId":"166","severity":1,"message":"167","line":34,"column":67,"nodeType":"168","messageId":"169","endLine":34,"endColumn":69},{"ruleId":"166","severity":1,"message":"167","line":35,"column":38,"nodeType":"168","messageId":"169","endLine":35,"endColumn":40},{"ruleId":"166","severity":1,"message":"167","line":62,"column":25,"nodeType":"168","messageId":"169","endLine":62,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":73,"column":22,"nodeType":"168","messageId":"169","endLine":73,"endColumn":24},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'useContext' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcFatorial'. Either include it or remove the dependency array.","ArrayExpression",["206"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Title' is defined but never used.","'valor' is assigned a value but never used.","'setValor' is assigned a value but never used.","'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'value04'. Either include it or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'setText'. Either include it or remove the dependency array.",["208"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'PageTitle' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useCallback' is defined but never used.","'word' is assigned a value but never used.","'setWord' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'gameProgress' is assigned a value but never used.","'setGameProgress' is assigned a value but never used.","'setCurrentWord' is assigned a value but never used.","'keyCode' is assigned a value but never used.","'setKeyCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createAnonWord'. Either include it or remove the dependency array.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [calcFatorial, valor]",{"range":"218","text":"219"},"Update the dependencies array to be: [value03, value04]",{"range":"220","text":"221"},"Update the dependencies array to be: [number, setText]",{"range":"222","text":"223"},"Update the dependencies array to be: [createAnonWord]",{"range":"224","text":"225"},[641,648],"[calcFatorial, valor]",[1859,1868],"[value03, value04]",[542,550],"[number, setText]",[794,796],"[createAnonWord]"]