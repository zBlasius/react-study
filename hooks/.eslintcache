[{"C:\\ExerciciosReact\\hooks\\src\\index.js":"1","C:\\ExerciciosReact\\hooks\\src\\App.jsx":"2","C:\\ExerciciosReact\\hooks\\src\\navBar\\Content.jsx":"3","C:\\ExerciciosReact\\hooks\\src\\navBar\\NavBar.jsx":"4","C:\\ExerciciosReact\\hooks\\src\\views\\Home\\Home.jsx":"5","C:\\ExerciciosReact\\hooks\\src\\views\\useCallback\\UseCallback.jsx":"6","C:\\ExerciciosReact\\hooks\\src\\views\\useContext\\UseContext.jsx":"7","C:\\ExerciciosReact\\hooks\\src\\views\\useMemo\\UseMemo.jsx":"8","C:\\ExerciciosReact\\hooks\\src\\views\\useRef\\UseRef.jsx":"9","C:\\ExerciciosReact\\hooks\\src\\views\\useReducer\\UseReducer.jsx":"10","C:\\ExerciciosReact\\hooks\\src\\views\\useEffect\\UseEffect.jsx":"11","C:\\ExerciciosReact\\hooks\\src\\views\\useState\\UseState.jsx":"12","C:\\ExerciciosReact\\hooks\\src\\views\\useMyHook\\UseMyHook.jsx":"13","C:\\ExerciciosReact\\hooks\\src\\views\\title\\Title.jsx":"14","C:\\ExerciciosReact\\hooks\\src\\views\\useRef\\UseRef2.jsx":"15","C:\\ExerciciosReact\\hooks\\src\\views\\useCallback\\UseCallBackButtons.jsx":"16","C:\\ExerciciosReact\\hooks\\src\\views\\useContext\\UseTestContext.jsx":"17","C:\\ExerciciosReact\\hooks\\src\\data\\DataContext2.jsx":"18","C:\\ExerciciosReact\\hooks\\src\\data\\DataContext.jsx":"19","C:\\ExerciciosReact\\hooks\\src\\data\\Store.jsx":"20"},{"size":308,"mtime":1635381350916,"results":"21","hashOfConfig":"22"},{"size":685,"mtime":1635550479166,"results":"23","hashOfConfig":"22"},{"size":2123,"mtime":1639610928893,"results":"24","hashOfConfig":"22"},{"size":1395,"mtime":1639610941540,"results":"25","hashOfConfig":"22"},{"size":351,"mtime":1626130317098,"results":"26","hashOfConfig":"22"},{"size":796,"mtime":1635292280627,"results":"27","hashOfConfig":"22"},{"size":1809,"mtime":1635555801029,"results":"28","hashOfConfig":"22"},{"size":1217,"mtime":1635288931712,"results":"29","hashOfConfig":"22"},{"size":3295,"mtime":1626130317143,"results":"30","hashOfConfig":"22"},{"size":3380,"mtime":1646267191576,"results":"31","hashOfConfig":"22"},{"size":3094,"mtime":1626130317119,"results":"32","hashOfConfig":"22"},{"size":1522,"mtime":1648921249063,"results":"33","hashOfConfig":"22"},{"size":344,"mtime":1626130317130,"results":"34","hashOfConfig":"22"},{"size":233,"mtime":1626130317105,"results":"35","hashOfConfig":"22"},{"size":2113,"mtime":1633483620269,"results":"36","hashOfConfig":"22"},{"size":432,"mtime":1637706563990,"results":"37","hashOfConfig":"22"},{"size":834,"mtime":1635549263263,"results":"38","hashOfConfig":"22"},{"size":179,"mtime":1635549588238,"results":"39","hashOfConfig":"22"},{"size":547,"mtime":1635549593236,"results":"40","hashOfConfig":"22"},{"size":845,"mtime":1635554458681,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jqyuzp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\ExerciciosReact\\hooks\\src\\index.js",[],["97","98"],"C:\\ExerciciosReact\\hooks\\src\\App.jsx",["99","100","101"],"import React , {useState} from 'react'\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Menu from './navBar/NavBar'\r\nimport Content from './navBar/Content'\r\nimport DataContext , {data} from './data/DataContext'\r\nimport Store from './data/Store'\r\n\r\n\r\nfunction App() {\r\n  const [state , setState] = useState(data)\r\n\r\n  return (\r\n    <div className=\"App\">  \r\n    <Store> \r\n      <DataContext.Provider value={{state , setState}}>  \r\n          <Router>\r\n              <Menu/>\r\n              <Content/>\r\n          </Router>\r\n      </DataContext.Provider>\r\n    </Store>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\ExerciciosReact\\hooks\\src\\navBar\\Content.jsx",["102","103"],"import './Content.css'\r\nimport React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n  import Store from '../data/Store'\r\n  import Home from '../views/Home/Home'\r\n  import UseCallback from '../views/useCallback/UseCallback'\r\n  import UseContext from '../views/useContext/UseContext'\r\n  import UseTestContext from '../views/useContext/UseTestContext'\r\n  import UseEffect from '../views/useEffect/UseEffect'\r\n  import UseMemo from '../views/useMemo/UseMemo'\r\n  import UseReducer from '../views/useReducer/UseReducer'\r\n  import UseRef from '../views/useRef/UseRef'\r\n  import UseRef2 from '../views/useRef/UseRef2'\r\n  import UseState from '../views/useState/UseState'\r\n  import UseMyHook from '../views/useMyHook/UseMyHook'\r\n \r\n  const Content = props => (\r\n      <main className=\"Content\"> \r\n          <Switch>\r\n              <Route exact path=\"/\"> \r\n                <Home/>\r\n              </Route>\r\n\r\n              <Route path='/Store'>\r\n                  <Store/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseState\">\r\n                  <UseState/>\r\n              </Route>\r\n\r\n              <Route  path=\"/UseEffect\" >\r\n                  <UseEffect/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseRef\">\r\n                  <UseRef/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseRef2\">\r\n                  <UseRef2/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseMemo\">\r\n                  <UseMemo/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseCallback\">\r\n                  <UseCallback/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseContext\">\r\n                  <UseContext/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseTestContext\">\r\n                <UseTestContext/>\r\n              </Route>   \r\n\r\n              <Route path=\"/UseReducer\">\r\n                  <UseReducer/>\r\n              </Route>\r\n\r\n              <Route path=\"/UseMyHook\">\r\n                  <UseMyHook/>\r\n              </Route>\r\n          </Switch>\r\n      </main>\r\n  )\r\n\r\n  export default Content","C:\\ExerciciosReact\\hooks\\src\\navBar\\NavBar.jsx",["104","105","106"],"import React from 'react'\r\nimport './NavBar.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst NavBar = props => (\r\n    <aside className=\"Menu\" >\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link exact to=\"/\"> Home </Link>\r\n                </li> \r\n                <li> \r\n                    <Link to='/store'> Store </Link>\r\n                </li>\r\n                <li>\r\n                   <Link to=\"/useState\"> UseState() </Link> \r\n                </li>\r\n                <li>\r\n                    <Link to=\"/useEffect\"> UseEffect()  </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/useRef\"> useRef() </Link>\r\n                </li>  \r\n                <li>\r\n                    <Link to=\"/useMemo\"> useMemo() </Link>\r\n                </li>\r\n                <li> \r\n                    <Link to=\"/useCallback\"> useCallback() </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/useContext\"> useContext() </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/useReducer\"> useReducer() </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/useMyHook\"> useMyHook() </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </aside>\r\n)\r\n\r\nexport default NavBar","C:\\ExerciciosReact\\hooks\\src\\views\\Home\\Home.jsx",["107","108","109","110"],"import React, {useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport '../estilo/Geral.css'\r\n\r\nimport Title from '../title/Title'\r\n\r\n\r\nconst UseMyHook = props => {\r\n    const[valor, setValor] = useState('State padrão')\r\n\r\n    return(\r\n       <div>\r\n           Home\r\n       </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default UseMyHook ","C:\\ExerciciosReact\\hooks\\src\\views\\useCallback\\UseCallback.jsx",["111"],"import React , { useState, useCallback } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport UseCallBackButtons from './UseCallBackButtons'\r\n\r\n\r\nconst UseCallback = props => {\r\n\r\n    const [result , setResult] = useState(0)\r\n\r\n    const inc = useCallback(function (delta){\r\n        setResult(curr => curr + delta)\r\n    }, [setResult]) \r\n\r\n    return(\r\n        <> \r\n            <div className=\"Cabecalho\">\r\n                <header>\r\n                    <h1> useCallback() </h1>\r\n                    <h2> Retorna uma função cacheada! </h2>\r\n                </header>\r\n            </div>\r\n            \r\n            <div>\r\n                <UseCallBackButtons inc={inc} />\r\n                <span> {result} </span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UseCallback","C:\\ExerciciosReact\\hooks\\src\\views\\useContext\\UseContext.jsx",["112"],"import React , {useContext, useEffect} from 'react'\r\nimport DataContext from '../../data/DataContext'\r\nimport {AppContext} from '../../data/Store'\r\n\r\nconst UseContext = props => {\r\n\r\n    const context = useContext(DataContext)\r\n\r\n    function addNumber(delta){\r\n        context.setState({\r\n            ...context.state, \r\n            number: context.state.number + delta\r\n        })\r\n    }\r\n\r\n    const {number, setNumber,text, setText} = useContext(AppContext)\r\n\r\n    useEffect(()=>{\r\n        if(number > 9290){\r\n            setText('EITA!!!')\r\n        }\r\n    },[number])\r\n\r\n    return(\r\n    <> \r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> useContext</h1>\r\n                <h5> Explicando o componente </h5>\r\n            </header>\r\n        </div>\r\n\r\n        <div>\r\n            <h2> Exercicio #01 </h2>\r\n            <span>  {context.state.text}   </span>\r\n            <span>  {context.state.number} </span>\r\n        </div>\r\n\r\n        <div>\r\n            <button className=\"btn\" onClick={()=> addNumber(-1)}> -1 </button>\r\n            <button className=\"btn\" onClick={()=> addNumber(1)}> +1 </button>\r\n        </div>\r\n\r\n        <div style={{margin:'50px' , width:600}}>\r\n             Observe que mesmo saindo da aba useContext e voltando, o estado continua o mesmo que foi alterado. Isso acontece pois há um \"componente global\" com esse estado, que dispensa a troca de informação direta entre componentes\r\n        </div>\r\n\r\n\r\n        <h2> Exercicio #02 </h2>\r\n        <span> {number} </span>\r\n        <span> {text} </span>\r\n\r\n        <div>\r\n            <input type=\"button\" value='-1' onClick={()=> setNumber(number -1)}/>\r\n            <input type=\"button\" value='+1' onClick={()=> setNumber(number +1)}/>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default UseContext","C:\\ExerciciosReact\\hooks\\src\\views\\useMemo\\UseMemo.jsx",["113"],"import React, { useState, useMemo } from 'react'\r\nimport PageTitle from '../title/Title'\r\n\r\nfunction sum(a,b){\r\n    return a + b;\r\n}\r\n\r\nconst UseMemo = props => {\r\n\r\n    const [n1, setN1] = useState(0)\r\n    const [n2, setN2] = useState(0)\r\n    const [n3, setN3] = useState(0)\r\n\r\n    const result = useMemo(()=> sum(n1,n2), [n1,n2]) // como se fosse um useEffect  --> useMemo(()=> FUNÇÃO, [valores])\r\n\r\n    return (\r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> UseMemo</h1>\r\n                <h5> Retorna um valor memorizado </h5>\r\n            </header>\r\n\r\n            <div style={{ display: 'flex', gap:20,alignItems:'center', flexDirection:'column', marginTop:20}}>\r\n                <input type=\"number\" className=\"input\" value={n1} onChange={e => setN1(parseInt(e.target.value))} />\r\n\r\n                <input type=\"number\" className=\"input\" value={n2} onChange={e => setN2(parseInt(e.target.value))} />\r\n\r\n                <input type=\"number\" className=\"input\" value={n3} onChange={e => setN3(parseInt(e.target.value))} />\r\n\r\n                <span style={{fontSize:30}}> {result } </span>\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseMemo","C:\\ExerciciosReact\\hooks\\src\\views\\useRef\\UseRef.jsx",["114","115"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Title from '../title/Title';\r\n\r\n\r\n\r\nconst UseRef = props => {\r\n    const [value01, setValue01] = useState(\"\");\r\n    const [value02, setValue02] = useState(\"\");\r\n\r\n    const [value03, setValue03] = useState(\"\");\r\n    const [value04, setValue04] = useState(\"\");\r\n\r\n    const myInput03 = useRef(null)\r\n    const myInput04 = useRef(null)\r\n\r\n    const count01 = useRef(0) // me Retorna um objeto com o atríbuto .current, ao chamar o count, devo chamar o current também(count.current), pois no caso é o que me interessa\r\n    const count02 = useRef(0)\r\n\r\n    var i=0\r\n\r\n    const merge = function (s1,s2) {// a constante armazenou uma função com dois parâmentros\r\n        return [...s1].map((e,i) => `${e}${s2[i] || \"\"}`).join(\"\")  // [...s1] vai transformar o paramtro s1 em um array de letras, depois vai mapear '.map()', e dentro desse map, e = cada letra, i = indice\r\n    }// vai retornar a letra mais a letra no indice correspondente a string de s2. Imagine um for onde cada i equivale a prosição do array.\r\n        // se eu colocar sem o .join(\"\"), o código acima me retorna um array, esse .join('') serve para transformar tudo em string de novo\r\n    \r\n\r\n    /// count.current ++ // Desse modo, vai alterar sempre que for alterado qualquer input, em todas as rendereizações.. \r\n    // Lembre-se que a nova reenderização só ocorre com a mudança de algum estado. Se vc colasse um input avulso, não iria funcionar\r\n    useEffect(e=>{\r\n        count01.current++ // Assim muda o count só quando um input específico for mudado. Para ser geral, deve ser fora da função\r\n    },[value01 /*, value02 */])  \r\n\r\n    useEffect(e=>{\r\n        count02.current++\r\n        myInput03.current.focus()\r\n        \r\n    },[value04]);\r\n\r\n    useEffect(e=>{\r\n        count02.current++\r\n        myInput04.current.focus()\r\n        merge(value03,value04)\r\n    }, [value03])\r\n\r\n    return(\r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> UseRef</h1>\r\n                <h5> Retorna um objeto mutável com a propriedade .current! </h5>\r\n            </header>\r\n\r\n            <Title titulo=\"Exercicio 01\" />\r\n            <div className=\"Corpo\">\r\n                <p> Input 01  <input type=\"text\" value={value01} onChange={e => setValue01(e.target.value)}/> </p>\r\n                <p> Input 02   <input type=\"text\" value={value02} onChange={e => setValue02(e.target.value)} /> </p>\r\n                <span>Valor: [</span> \r\n                <span> {count01.current} ] </span>\r\n            </div>\r\n\r\n            <Title titulo=\"Exercicio 02\" />\r\n            <div className=\"Corpo\">\r\n\r\n                    <p><input type=\"text\" value={value03} \r\n                    ref={myInput03}\r\n                    onChange={e => setValue03(e.target.value)}/></p>\r\n\r\n                    <p><input type=\"text\" value={value04} \r\n                    ref={myInput04}\r\n                    onChange={e => setValue04(e.target.value)}/></p>\r\n\r\n                <span>Valor: [</span>\r\n                <span> {count02.current} ] </span>\r\n                    <p>{value03}</p>\r\n                    <p>{value04}</p>\r\n                    <h2> {merge(value03, value04)} </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRef","C:\\ExerciciosReact\\hooks\\src\\views\\useReducer\\UseReducer.jsx",["116"],"import React, { useReducer } from 'react'\r\nimport '../estilo/Geral.css'\r\n\r\nconst initialState = {\r\n    cart: [],\r\n    products: [],\r\n    //foco\r\n    number: 0,\r\n    user: { name: 'nothing' }\r\n}\r\n\r\nconst secondInitialState = {\r\n    cart:[],\r\n    products:[],\r\n    user:null,\r\n    number:0\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'numberAdd2':\r\n            return { ...state, number: state.number + 2 }\r\n        case 'login':\r\n            return { ...state, user: { name: action.payload } }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction reducerTest(state,action){\r\n    switch (action.type){\r\n        case 'addNumber2':\r\n            return {...state, number: state.number +2}\r\n        case 'multiplyFor7':\r\n            return {...state, number: state.number * 7}\r\n        case 'shareBy25':\r\n            return {...state, number: state.number / 25}\r\n        case 'addNumber9':\r\n            return {...state, number: state.number + action.payload}\r\n        case 'parseToInteger':\r\n            return {...state, number: parseInt(state.number)}\r\n            \r\n    }\r\n}\r\n\r\n\r\nconst UseReducer = props => {\r\n    const [firstState, dispatch] = useReducer(reducer, initialState)\r\n    const [secondState, dispatchTest] = useReducer(reducerTest, secondInitialState)\r\n\r\n    return (\r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> useReducer</h1>\r\n                <h5> Explicando o componente </h5>\r\n            </header>\r\n\r\n            <div className=\"Corpo\">\r\n                <h1> #Exercicio 01 </h1>\r\n                <h3> {firstState.user.name} </h3>\r\n                <div className=\"groupButton\">\r\n                    <input className=\"btn\" type='button' value={firstState.number} onClick={() => dispatch({ type: 'numberAdd2' })} />\r\n                    <input className=\"text\" type=\"text\"  value={firstState.user.name} onChange={(e) => dispatch({ type: 'login', payload: e.target.value })} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Corpo\">\r\n                <h1> #Exercicio 02 - Challenge </h1>\r\n\r\n                <div className=\"Instructions\">\r\n                    <h4>Intructions</h4>\r\n                    <span> 1 - Create a number and multiply for seven. </span>\r\n                    <span> 2 - Share the result by twenty-five </span>\r\n                    <span> 3 - Create a function to tranform for a integer. </span>\r\n                    <span> 4 - Add some number of your choice. </span>\r\n                </div>\r\n\r\n                <div className=\"groupButton\">\r\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'addNumber2'})}> +2 </button>\r\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'multiplyFor7'})}> *7 </button>\r\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'shareBy25'})}> /25 </button>\r\n                    <button className=\"btn\" type=\"button\" onClick={()=>  dispatchTest({type:'addNumber9', payload:9})}>  +9 </button>\r\n                    <button className=\"btn\" type=\"button\" value={\"Interger\"} onClick={()=>  dispatchTest({type:'parseToInteger'})}> Inteiro </button>\r\n                </div>\r\n            </div>\r\n\r\n            {secondState.number}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducer","C:\\ExerciciosReact\\hooks\\src\\views\\useEffect\\UseEffect.jsx",["117","118","119","120"],"import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport Title from '../title/Title'\r\nimport './useEffect.css'\r\n\r\n\r\nconst UseEffect = props => {\r\n    // EX #01\r\n    const [valor, setValor] = useState(0) // observe que valor, é o Input\r\n    const [fatorial, setFatorial] = useState(1) //  e que fatorial é o calculo fatorial retornado\r\n\r\n    // EX #02\r\n    const [number, setNumber] = useState(0)\r\n    const [verify, setVerify] = useState(Boolean)\r\n\r\n\r\n     //EX #01\r\n    useEffect(_=> { // 1 parâmetro: Vai chamar a função sempre que algo mudar ** com arrow function\r\n        setFatorial(calcFatorial(valor))\r\n    },[valor]) // 2 parâmetro, pergunte-se: Do que eu dependo para calcular o fatorial?\r\n\r\n    useEffect(function(){\r\n        if(fatorial > 10000000){\r\n            document.title = 'eita !!'\r\n        }\r\n    },[fatorial/*, OutraVar */]) // Pode ser mais de uma passagem por valor\r\n\r\n    //EX #02\r\n    useEffect(function(){\r\n        setVerify(isPar(number))\r\n    },[number])\r\n\r\n    function isPar(n){\r\n        if(n % 2 == 0){\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function calcFatorial(n){\r\n        const num = parseInt(n)\r\n        if(n < 0) return -1\r\n        if(num === 0) return 1\r\n        return calcFatorial(n-1) * n\r\n    }\r\n\r\n    return(\r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> UseEffect</h1>\r\n                <h5> Permite executar efeitos colaterais em componentes funcionais! </h5>\r\n            </header>\r\n\r\n            <Title titulo=\"Exercicio 01\" subtitulo=\"Calculo fatorial\" />\r\n            <div className=\"Corpo\">\r\n                <div>\r\n                    <span> Fatorial </span>\r\n                    <span className=\"red\"> {fatorial === -1 ?'Não existe': fatorial} </span>\r\n                </div>\r\n                <input type=\"number\" onChange={e=>{setValor(e.target.value)}} />\r\n            </div>\r\n\r\n            <Title titulo=\"Exercicio 02\" subtitulo=\"?\" />\r\n            <div className=\"Corpo\">\r\n                <div>\r\n\r\n                    <span className=\"red\" > {verify == true ? 'Par' : 'Impar'} </span>\r\n                </div>\r\n                <input type=\"number\" onChange={e => setNumber(e.target.value)} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseEffect\r\n\r\n/*\r\n const [valor, setValor] = useState(0)\r\n    const [fatorial, setFatorial] = useState(1)\r\n    setFatorial(calcFatorial(valor)) // Se eu quissese alterar o estado, para o número fatoria do que eu passar na const fatorial, isso deveria funcionar correto?\r\n    // Logicamente, sim, mas no React isso NÃO é possível, para alterar a const valor eu vou precisar chamar o Hooks useEffect\r\n\r\n    function calcFatorial(n){\r\n        if(n < 0) return -1\r\n        if(n === 0) return 1\r\n        return calcFatorial(n-1) * n\r\n    }\r\n\r\n    Esse erro aconteceu, porque eu fiquei alterando o fatorial e o number pra sempre, ou seja, entrou em loop infinito\r\n    Veja o código acima para saber como resolver esse problema\r\n*/","C:\\ExerciciosReact\\hooks\\src\\views\\useState\\UseState.jsx",["121"],"C:\\ExerciciosReact\\hooks\\src\\views\\useMyHook\\UseMyHook.jsx",["122"],"import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nconst UseMyHook = props => {\r\n\r\n    return(\r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> UseMyHook</h1>\r\n                <h5> Explicando o componente </h5>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseMyHook ","C:\\ExerciciosReact\\hooks\\src\\views\\title\\Title.jsx",["123"],"import React from 'react'\r\nimport './title.css'\r\n\r\nexport default props => {\r\n\r\n    return(\r\n        <div className=\"titulo\">\r\n            <h2> {props.titulo} </h2>\r\n            <h5> {props.subtitulo} </h5>\r\n        </div>\r\n    );\r\n}","C:\\ExerciciosReact\\hooks\\src\\views\\useRef\\UseRef2.jsx",["124","125","126"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Title from '../title/Title'\r\n\r\nconst merge = (s1, s2)=> {\r\n    let teste\r\n    s1.map((item,index)=>{\r\n        teste = `${item[index]} ${s2[index]}` // verificar depois\r\n    })\r\n    return teste\r\n}   \r\n\r\nconst UseRef2 = props => {\r\n    const [value1, setValue1] = useState(\"\")\r\n    const [value2, setValue2] = useState(\"\")\r\n    const [total, setTotal] = useState(\"\")\r\n    const count = useRef(-1) // UseRef = Passagem por referência. Count é na verdade, um objeto com o parametro current dentro dele\r\n    // esse Objeto terá sempre a mesma referência\r\n    const myInput1 = useRef(null)\r\n    const myInput2 = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        count.current++\r\n        myInput2.current.focus()\r\n    },[value1])\r\n\r\n    useEffect(()=>{\r\n        count.current++\r\n        myInput1.current.focus()\r\n    },[value2])\r\n    \r\n    count.current = count.current+1\r\n    return (\r\n        <div className=\"Cabecalho\">\r\n            <header>\r\n                <h1> UseRef</h1>\r\n                <h5> Retorna um objeto mutável com a propriedade .current! </h5>\r\n            </header> \r\n\r\n            <div>\r\n                <span> Valor: </span> \r\n                <span> {merge(value1,value2)}</span>\r\n                <span> [{count.current}] </span> \r\n                \r\n            </div>\r\n            \r\n            <div className=\"Corpo\">\r\n            <Title titulo=\"Exercicio01\"/>\r\n               <input type=\"text\" className=\"input\" value={value1} \r\n               ref={myInput1}\r\n               onChange={(e)=> { \r\n                   setValue1(e.target.value)\r\n                   merge(value1,value2)\r\n                }}/> \r\n            </div>\r\n\r\n\r\n            <div className=\"Corpo\">\r\n            <Title titulo=\"Exercicio02\"/>\r\n               <input type=\"input\" className=\"input\" value={value2} \r\n                ref={myInput2}\r\n               onChange={(e)=> { \r\n                    setValue2(e.target.value)\r\n                    merge(value1,value2)\r\n                }}/> \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRef2","C:\\ExerciciosReact\\hooks\\src\\views\\useCallback\\UseCallBackButtons.jsx",[],"C:\\ExerciciosReact\\hooks\\src\\views\\useContext\\UseTestContext.jsx",[],"C:\\ExerciciosReact\\hooks\\src\\data\\DataContext2.jsx",[],"C:\\ExerciciosReact\\hooks\\src\\data\\DataContext.jsx",["127"],"import React , {useContext} from 'react'\r\n\r\nexport const data ={\r\n    number: 123,\r\n    text: 'Context API...'\r\n}\r\n\r\nconst DataContext = React.createContext(data)\r\n\r\nexport default DataContext\r\n// O contexto, é para quando se faz necessário a comunicação de dois componentes muito distantes.\r\n// ou seja, para não envolver muitos outros componentes indiretamentes, é feito um COntext central para a comunicação direta\r\n\r\n// é interessante que esse componente seja chamado na parte mais alta da minha aplicação, como o app.js ou index.js","C:\\ExerciciosReact\\hooks\\src\\data\\Store.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":5,"column":3,"nodeType":"134","messageId":"135","endLine":5,"endColumn":9},{"ruleId":"132","severity":1,"message":"136","line":6,"column":3,"nodeType":"134","messageId":"135","endLine":6,"endColumn":8},{"ruleId":"132","severity":1,"message":"137","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":7},{"ruleId":"132","severity":1,"message":"138","line":4,"column":22,"nodeType":"134","messageId":"135","endLine":4,"endColumn":28},{"ruleId":"132","severity":1,"message":"137","line":7,"column":5,"nodeType":"134","messageId":"135","endLine":7,"endColumn":9},{"ruleId":"132","severity":1,"message":"138","line":4,"column":22,"nodeType":"134","messageId":"135","endLine":4,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":5,"column":5,"nodeType":"134","messageId":"135","endLine":5,"endColumn":11},{"ruleId":"132","severity":1,"message":"136","line":6,"column":5,"nodeType":"134","messageId":"135","endLine":6,"endColumn":10},{"ruleId":"132","severity":1,"message":"139","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"140","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"141","line":9,"column":11,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"132","severity":1,"message":"142","line":9,"column":18,"nodeType":"134","messageId":"135","endLine":9,"endColumn":26},{"ruleId":"132","severity":1,"message":"139","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":22,"column":7,"nodeType":"145","endLine":22,"endColumn":15,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"147","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":17},{"ruleId":"132","severity":1,"message":"148","line":19,"column":9,"nodeType":"134","messageId":"135","endLine":19,"endColumn":10},{"ruleId":"143","severity":1,"message":"149","line":43,"column":8,"nodeType":"145","endLine":43,"endColumn":17,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":31,"column":5,"nodeType":"153","messageId":"154","endLine":43,"endColumn":6},{"ruleId":"132","severity":1,"message":"139","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"155","line":20,"column":7,"nodeType":"145","endLine":20,"endColumn":14,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":34,"column":18,"nodeType":"159","messageId":"160","endLine":34,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":68,"column":53,"nodeType":"159","messageId":"160","endLine":68,"endColumn":55},{"ruleId":"132","severity":1,"message":"139","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"139","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":4,"column":1,"nodeType":"163","endLine":12,"endColumn":2},{"ruleId":"164","severity":1,"message":"165","line":6,"column":24,"nodeType":"166","messageId":"167","endLine":6,"endColumn":26},{"ruleId":"132","severity":1,"message":"168","line":15,"column":12,"nodeType":"134","messageId":"135","endLine":15,"endColumn":17},{"ruleId":"132","severity":1,"message":"169","line":15,"column":19,"nodeType":"134","messageId":"135","endLine":15,"endColumn":27},{"ruleId":"132","severity":1,"message":"170","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":27},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'useParams' is defined but never used.","'Title' is defined but never used.","'valor' is assigned a value but never used.","'setValor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setText'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'PageTitle' is defined but never used.","'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'value04'. Either include it or remove the dependency array.",["174"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'calcFatorial'. Either include it or remove the dependency array.",["175"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [number, setText]",{"range":"182","text":"183"},"Update the dependencies array to be: [value03, value04]",{"range":"184","text":"185"},"Update the dependencies array to be: [calcFatorial, valor]",{"range":"186","text":"187"},[563,571],"[number, setText]",[1901,1910],"[value03, value04]",[660,667],"[calcFatorial, valor]"]